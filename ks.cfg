#
# Defines the basics for all kickstarts in the fedora-live branch
# Does not include package selection (other then mandatory)
# Does not include localization packages or configuration
#
# Does includes "default" language configuration (kickstarts including
# this template can override these settings)

# System language
lang pt_BR.UTF-8

# Keyboard layouts
keyboard 'br-abnt2'

# System timezone
timezone America/Sao_Paulo

# Password file auth
auth --useshadow --passalgo=sha512

# SELinux configuration
selinux --disabled

# Firewall configuration
firewall --disabled

install
cdrom
graphical
xconfig  --startxonboot
firstboot --disable
bootloader --location=mbr --boot-drive=sda
zerombr
clearpart --all

# Partitions
part / --fstype="ext4" --grow --size=1
part /boot --asprimary --fstype="ext4" --size=1024
part swap --fstype="swap" --recommended

# Services
services --enabled=NetworkManager,ModemManager,sshd

# Network information
network --bootproto=dhcp --device=link --activate
network --hostname=pdv

# Root password - Default pdv
rootpw --iscrypted $1$itOcV1pW$YcZ8FFpLojP999mIAMjAd.

reboot --eject

# Repos
repo --name=fedora --mirrorlist=https://mirrors.fedoraproject.org/mirrorlist?repo=fedora-$releasever&arch=$basearch
repo --name=updates --mirrorlist=https://mirrors.fedoraproject.org/mirrorlist?repo=updates-released-f$releasever&arch=$basearch
repo --name=updates-testing --mirrorlist=https://mirrors.fedoraproject.org/mirrorlist?repo=updates-testing-f$releasever&arch=$basearch
url --mirrorlist=https://mirrors.fedoraproject.org/mirrorlist?repo=fedora-$releasever&arch=$basearch

%packages
@base-x
@standard
@core
@fonts
@input-methods
@hardware-support
@printing
#@lxqt
#@lxqt-apps
@networkmanager-submodules
@system-tools

# Explicitly specified here:
# <notting> walters: because otherwise dependency loops cause yum issues.
kernel
kernel-modules
kernel-modules-extra

# This was added a while ago, I think it falls into the category of
# "Diagnosis/recovery tool useful from a Live OS image".  Leaving this untouched
# for now.
memtest86+

# The point of a live image is to install
anaconda
@anaconda-tools

# Need aajohan-comfortaa-fonts for the SVG rnotes images
aajohan-comfortaa-fonts

# Without this, initramfs generation during live image creation fails: #1242586
syslinux

# anaconda needs the locales available to run for different locales
glibc-all-langpacks

# for nm applet
gnome-keyring

# l10n
#lxqt-l10n
#lximage-qt-l10n
#obconf-qt-l10n
#pavucontrol-qt-l10n

# MP3
gstreamer1-plugin-mpg123

# remove unneeded stuff to get a lightweight system
# fonts (we make no bones about admitting we're english-only)
wqy-microhei-fonts          # a compact CJK font, to replace:
-naver-nanum-gothic-fonts       # Korean
-vlgothic-fonts             # Japanese
-adobe-source-han-sans-cn-fonts     # simplified Chinese
-adobe-source-han-sans-tw-fonts     # traditional Chinese

-paratype-pt-sans-fonts # Cyrillic (already supported by DejaVu), huge
#-stix-fonts        # mathematical symbols

# remove input methods to free space
-@input-methods
-scim*
-m17n*
-ibus*
-iok

# Fix https://bugzilla.redhat.com/show_bug.cgi?id=1429132
# Why is this not pulled in by anaconda???
storaged

# Custom Packages
-BackupPC
-NetworkManager-l2tp
-NetworkManager-libreswan
-NetworkManager-openconnect
-NetworkManager-openvpn
-NetworkManager-vpnc
-bonnie++
-jigdo
-openconnect
-openvpn
-thunderbird
-tigervnc
-vpnc
-libreoffice*

%end

%pre
#!/bin/bash
hds=""
mymedia=""

for file in /sys/block/sd*; do
hds="$hds $(basename $file)"
done

set $hds
numhd=$(echo $#)

drive1=$(echo $hds | cut -d' ' -f1)
drive2=$(echo $hds | cut -d' ' -f2)

if [ $numhd == "2" ]  ; then
    echo "#partitioning scheme generated in %pre for 2 drives" > /tmp/part-include
    echo "clearpart --all" >> /tmp/part-include
    echo "part /boot --fstype ext4 --size 512 --ondisk sda" >> /tmp/part-include
    echo "part / --fstype ext4 --size 10000 --grow --ondisk sda" >> /tmp/part-include
    echo "part swap --recommended --ondisk $drive1" >> /tmp/part-include
else
    echo "#partitioning scheme generated in %pre for 1 drive" > /tmp/part-include
    echo "clearpart --all" >> /tmp/part-include
    echo "part /boot --fstype ext4 --size 521" >> /tmp/part-include
    echo "part swap --recommended" >> /tmp/part-include
    echo "part / --fstype ext4 --grow --size 2048" >> /tmp/part-include
fi
%end

%post
echo "OK"
%end

%post --nochroot

# disable screensaver locking
#cat >> /home/vr/.xscreensaver << EOF
#lock:	False
#EOF

### Instalação do sistema do pdv
#mkdir $INSTALL_ROOT/pdv_vr
#mkdir $INSTALL_ROOT/SAT
#mkdir $INSTALL_ROOT/pdv
#mkdir -p $INSTALL_ROOT/pdv_instalacao/lib
#mkdir -p $INSTALL_ROOT/pdv_instalacao/epson
#mkdir -p $INSTALL_ROOT/pdv_instalacao/sitef
#mkdir -p $INSTALL_ROOT/pdv_instalacao/tools
#mkdir -p $INSTALL_ROOT/pdv_instalacao/iniciar
#mkdir -p $INSTALL_ROOT/pdv_instalacao/links

#cp -r /home/kleber/Dados/fedora-vrsoftware/vrpdv_instalacao/pdv/* $INSTALL_ROOT/pdv/
#cp -r /home/kleber/Dados/fedora-vrsoftware/vrpdv_instalacao/lib/* $INSTALL_ROOT/pdv_instalacao/lib/
#cp -r /home/kleber/Dados/fedora-vrsoftware/vrpdv_instalacao/epson/* $INSTALL_ROOT/pdv_instalacao/epson/
#cp /home/kleber/Dados/fedora-vrsoftware/vrpdv_instalacao/sitef/CliSiTef.ini $INSTALL_ROOT/pdv_instalacao/sitef/
#cp /home/kleber/Dados/fedora-vrsoftware/vrpdv_instalacao/jre-7u65-linux-i586.rpm $INSTALL_ROOT/pdv_instalacao/tools/
#cp /home/kleber/Dados/fedora-vrsoftware/vrpdv_instalacao/anydesk-4.0.0-1.fc24.i686.rpm $INSTALL_ROOT/pdv_instalacao/tools/
#cp /home/kleber/Dados/fedora-vrsoftware/vrpdv_instalacao/FirebirdCS-2.5.8.27089-0.i686.rpm $INSTALL_ROOT/pdv_instalacao/tools/
#cp -r /home/kleber/Dados/fedora-vrsoftware/vrpdv_instalacao/iniciar/* $INSTALL_ROOT/pdv_instalacao/iniciar/
#cp /home/kleber/Dados/fedora-vrsoftware/vrpdv_instalacao/VRPdv.desktop $INSTALL_ROOT/pdv_instalacao/links/VRPdv.desktop

%end
